<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="592px" preserveAspectRatio="none" style="width:652px;height:592px;background:#000000;" version="1.1" viewBox="0 0 652 592" width="652px" zoomAndPan="magnify"><defs/><g><rect fill="#12180B" height="1" style="stroke:#12180B;stroke-width:1.0;" width="1" x="0" y="0"/><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="116" x="5" y="17">PlantUML 1.2022.7</text><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="4" x="5" y="31.1328"> </text><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="380" x="5" y="45.2656">&lt;b&gt;This version of PlantUML is 575 days old, so you should</text><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="390" x="5" y="59.3984">&lt;b&gt;consider upgrading from https://plantuml.com/download</text><rect fill="#33FF02" height="21.4883" style="stroke:#33FF02;stroke-width:1.0;" width="349" x="5" y="69.5313"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="165" x="6" y="84.5313">[From string (line 10) ]</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="105.0195"> </text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="74" x="5" y="121.5078">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="248" x="5" y="137.9961">!include ./CameraPerspective.puml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="105" x="5" y="154.4844">class Camera {</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="327" x="25" y="170.9727">+ Camera(position:Vector3, aspectRatio:float)</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="220" x="25" y="187.4609">+ AspectRatio : float &lt;&lt;set&gt;&gt;</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="9" x="5" y="203.9492">...</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="160" x="5" y="220.4375">... ( skipping 72 lines )</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="9" x="5" y="236.9258">...</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="253.4141">}</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="224" x="5" y="269.9023">!include ./Shaders/Shader.puml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="99" x="5" y="286.3906">class Shader {</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="210" x="25" y="302.8789">+ &lt;&lt;readonly&gt;&gt; Handle : int</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="295" x="25" y="319.3672">+ Shader(vertPath:string, fragPath:string)</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="96" x="25" y="335.8555">+ Use() : void</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="313" x="25" y="352.3438">+ GetAttribLocation(attribName:string) : int</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="259" x="25" y="368.832">+ SetInt(name:string, data:int) : void</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="289" x="25" y="385.3203">+ SetFloat(name:string, data:float) : void</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="329" x="25" y="401.8086">+ SetMatrix4(name:string, data:Matrix4) : void</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="329" x="25" y="418.2969">+ SetVector3(name:string, data:Vector3) : void</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="434.7852">}</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="231" x="5" y="451.2734">!include ./Shaders/Texture.puml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="106" x="5" y="467.7617">class Texture {</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="210" x="25" y="484.25">+ &lt;&lt;readonly&gt;&gt; Handle : int</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="324" x="25" y="500.7383">+ {static} LoadFromFile(path:string) : Texture</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="168" x="25" y="517.2266">+ Texture(glHandle:int)</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="213" x="25" y="533.7148">+ Use(unit:TextureUnit) : void</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="550.2031">}</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="wavy underline" textLength="586" x="5" y="566.6914">!include ./obj/Debug/net8.0/.NETCoreApp,Version=v7.0.AssemblyAttributes.puml</text><text fill="#FF0000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="635" x="10" y="583.1797">cannot include ./obj/Debug/net8.0/.NETCoreApp,Version=v7.0.AssemblyAttributes.puml</text><!--MD5=[7179527eebf201dc3185af74dab08285]

@startuml
class Camera {
    + Camera(position:Vector3, aspectRatio:float)
    + AspectRatio : float <<set>>
    + Pitch : float <<get>> <<set>>
    + Yaw : float <<get>> <<set>>
    + Fov : float <<get>> <<set>>
    + GetViewMatrix() : Matrix4
    + GetProjectionMatrix() : Matrix4
}
Camera - -> "Position" Vector3
Camera - -> "Front" Vector3
Camera - -> "Up" Vector3
Camera - -> "Right" Vector3
abstract class Utilitario {
    + {static} CharProximo(atual:char) : char
    + {static} TeclaUpperConsole(msg:String, Control:bool, Shift:bool) : char
    + {static} NDC_TelaSRU(largura:int, altura:int, mousePosition:Ponto4D) : Ponto4D
    + {static} AjudaTeclado() : void
}
class Transformacao4D {
    {static} + <<readonly>> DEG_TO_RAD : double = 0.017453292519943295769236907684886
    + Transformacao4D()
    + ObterDadosOpenTK() : Matrix4
    + AtribuirIdentidade() : void
    + AtribuirTranslacao(tx:double, ty:double, tz:double) : void
    + AtribuirEscala(sX:double, sY:double, sZ:double) : void
    + AtribuirRotacaoX(radians:double) : void
    + AtribuirRotacaoY(radians:double) : void
    + AtribuirRotacaoZ(radians:double) : void
    + MultiplicarPonto(pto:Ponto4D) : Ponto4D
    + MultiplicarMatriz(t:Transformacao4D) : Transformacao4D
    + ObterElemento(index:int) : double
    + AtribuirElemento(index:int, value:double) : void
    + ObterDados() : double[]
    + AtribuirDados(data:double[]) : void
    + <<override>> ToString() : string
}
class BBox {
    + BBox()
    + Atualizar(matriz:Transformacao4D, pontosLista:List<Ponto4D>) : void
    + ProcessarCentro() : void
    + Dentro(pto:Ponto4D) : bool
    + obterMenorX : double <<get>>
    + obterMenorY : double <<get>>
    + obterMenorZ : double <<get>>
    + obterMaiorX : double <<get>>
    + obterMaiorY : double <<get>>
    + obterMaiorZ : double <<get>>
    + Desenhar(matrizGrafo:Transformacao4D) : void
    + <<override>> ToString() : string
}
BBox - -> "obterCentro" Ponto4D
class Ponto4D {
    + Ponto4D(x:double, y:double, z:double, w:double)
    + Ponto4D(pto:Ponto4D)
    + X : double <<get>> <<set>>
    + Y : double <<get>> <<set>>
    + Z : double <<get>> <<set>>
    + W : double <<get>>
    + <<override>> ToString() : string
}
abstract class Matematica {
    + {static} GerarPtosCirculo(angulo:double, raio:double) : Ponto4D
    + {static} GerarPtosCirculoSimetrico(raio:double) : double
    + {static} Dentro(bBox:BBox, pto:Ponto4D) : bool
    + {static} distanciaQuadrado(ptoA:Ponto4D, ptoB:Ponto4D) : double
    + {static} distancia(ptoA:Ponto4D, ptoB:Ponto4D) : double
    + {static} ScanLineInterseccao(yi:double, y1:double, y2:double) : double
    + {static} ScanLineCalculaXi(x1:double, x2:double, ti:double) : double
    + {static} ScanLine(ptoClique:Ponto4D, ptoIni:Ponto4D, ptoFim:Ponto4D) : bool
}
class Shader {
    + <<readonly>> Handle : int
    + Shader(vertPath:string, fragPath:string)
    + Use() : void
    + GetAttribLocation(attribName:string) : int
    + SetInt(name:string, data:int) : void
    + SetFloat(name:string, data:float) : void
    + SetMatrix4(name:string, data:Matrix4) : void
    + SetVector3(name:string, data:Vector3) : void
}
class Texture {
    + <<readonly>> Handle : int
    + {static} LoadFromFile(path:string) : Texture
    + Texture(glHandle:int)
    + Use(unit:TextureUnit) : void
}
!include ./obj/Debug/net8.0/.NETCoreApp,Version=v7.0.AssemblyAttributes.puml

PlantUML version 1.2022.7(Mon Aug 22 14:01:30 BRT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: BR
--></g></svg>